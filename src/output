
Section '.init' 0x80482e0 - 0x80482f7 
Function 80482e0: 0x80482e0 - 0x8048308
calls:
0x80482e0:	push	%ebp
0x80482e1:	mov	%esp, %ebp
0x80482e3:	sub	$0x8, %esp
0x80482e6:	call	0x8048374
0x80482eb:	call	0x80483e0
0x80482f0:	call	0x8048570
0x80482f5:	leave	
0x80482f6:	ret	

Section '.plt' 0x80482f8 - 0x8048348 
0x80482f8:	pushl	*0x8049724
0x80482fe:	jmpl	*0x8049728
0x8048304:	addb	%al, (%eax)
0x8048306:	addb	%al, (%eax)
Function fprintf: 0x8048308 - 0x8048318
calls:
0x8048308:	jmpl	*0x804972c
0x804830e:	push	$0x0
0x8048313:	jmp	0x80482f8
Function __libc_start_main: 0x8048318 - 0x8048328
calls:
0x8048318:	jmpl	*0x8049730
0x804831e:	push	$0x8
0x8048323:	jmp	0x80482f8
Function printf: 0x8048328 - 0x8048338
calls:
0x8048328:	jmpl	*0x8049734
0x804832e:	push	$0x10
0x8048333:	jmp	0x80482f8
Function exit: 0x8048338 - 0x8048350
calls:
0x8048338:	jmpl	*0x8049738
0x804833e:	push	$0x18
0x8048343:	jmp	0x80482f8

Section '.text' 0x8048350 - 0x80485a0 
Function _start: 0x8048350 - 0x804837d
calls:8048318,804837d,
0x8048350:	xor	%ebp, %ebp
0x8048352:	pop	%esi
0x8048353:	mov	%esp, %ecx
0x8048355:	and	$0xf0, %esp
0x8048358:	push	%eax
0x8048359:	push	%esp
0x804835a:	push	%edx
0x804835b:	push	$__libc_csu_fini
0x8048360:	push	$__libc_csu_init
0x8048365:	push	%ecx
0x8048366:	push	%esi
0x8048367:	push	$main
0x804836c:	call	__libc_start_main
0x8048371:	hlt	
0x8048372:	nop	
0x8048373:	nop	
0x8048374:	push	%ebp
0x8048375:	mov	%esp, %ebp
0x8048377:	push	%ebx
0x8048378:	call	804837d
Function 804837d: 0x804837d - 0x8048414
calls:
0x804837d:	pop	%ebx
0x804837e:	add	$0x13a3, %ebx
0x8048384:	push	%eax
0x8048385:	mov	0x1c(%ebx), %eax
0x804838b:	test	%eax, %eax
0x804838d:	jz	0x8048391
0x804838f:	call	%eax
0x8048391:	mov	0xfc(%ebp), %ebx
0x8048394:	leave	
0x8048395:	ret	
0x8048396:	nop	
0x8048397:	nop	
0x8048398:	nop	
0x8048399:	nop	
0x804839a:	nop	
0x804839b:	nop	
0x804839c:	nop	
0x804839d:	nop	
0x804839e:	nop	
0x804839f:	nop	
0x80483a0:	push	%ebp
0x80483a1:	mov	%esp, %ebp
0x80483a3:	sub	$0x8, %esp
0x80483a6:	cmpb	$0x0, *0x8049744
0x80483ad:	jnz	0x80483dc
0x80483af:	mov	0x80495e8, %eax
0x80483b4:	mov	(%eax), %edx
0x80483b6:	test	%edx, %edx
0x80483b8:	jz	0x80483d5
0x80483ba:	lea	0x0(%esi), %esi
0x80483c0:	add	$0x4, %eax
0x80483c3:	movl	%eax, 0x80495e8
0x80483c8:	call	%edx
0x80483ca:	mov	0x80495e8, %eax
0x80483cf:	mov	(%eax), %edx
0x80483d1:	test	%edx, %edx
0x80483d3:	jnz	0x80483c0
0x80483d5:	movb	$0x1, *0x8049744
0x80483dc:	leave	
0x80483dd:	ret	
0x80483de:	mov	%esi, %esi
0x80483e0:	push	%ebp
0x80483e1:	mov	%esp, %ebp
0x80483e3:	sub	$0x8, %esp
0x80483e6:	mov	0x804971c, %eax
0x80483eb:	test	%eax, %eax
0x80483ed:	jz	0x8048410
0x80483ef:	mov	$0x0, %eax
0x80483f4:	test	%eax, %eax
0x80483f6:	jz	0x8048410
0x80483f8:	movl	$0x804971c, (%esp)
0x80483ff:	call	0x0
0x8048404:	lea	0x0(%esi), %esi
0x804840a:	lea	0x0(%edi), %edi
0x8048410:	mov	%ebp, %esp
0x8048412:	pop	%ebp
0x8048413:	ret	
Function 8048414: 0x8048414 - 0x8048436
calls:8048308,
0x8048414:	push	%ebp
0x8048415:	mov	%esp, %ebp
0x8048417:	sub	$0x8, %esp
0x804841a:	movl	$hello
, 0x4(%esp)
0x8048422:	mov	stdout, %eax
0x8048427:	movl	%eax, (%esp)
0x804842a:	call	fprintf
0x804842f:	mov	$0x0, %eax
0x8048434:	leave	
0x8048435:	ret	
Function 8048436: 0x8048436 - 0x8048465
calls:8048328,8048338,8048414,
0x8048436:	push	%ebp
0x8048437:	mov	%esp, %ebp
0x8048439:	sub	$0x8, %esp
0x804843c:	movl	$hello
, (%esp)
0x8048443:	call	printf
0x8048448:	movl	$OAISDJF;ALSKJD, (%esp)
0x804844f:	call	printf
0x8048454:	call	8048414
0x8048459:	movl	$0x0, (%esp)
0x8048460:	call	exit
Function 8048465: 0x8048465 - 0x804847c
calls:8048436,8048465,
0x8048465:	push	%ebp
0x8048466:	mov	%esp, %ebp
0x8048468:	sub	$0x8, %esp
0x804846b:	call	8048436
0x8048470:	call	8048465
0x8048475:	mov	$0x0, %eax
0x804847a:	leave	
0x804847b:	ret	
Function main: 0x804847c - 0x80484b0
calls:8048414,8048465,
0x804847c:	push	%ebp
0x804847d:	mov	%esp, %ebp
0x804847f:	sub	$0x8, %esp
0x8048482:	and	$0xf0, %esp
0x8048485:	mov	$0x0, %eax
0x804848a:	sub	%eax, %esp
0x804848c:	cmpl	$0x1, 0x8(%ebp)
0x8048490:	jnz	0x8048499
0x8048492:	call	8048414
0x8048497:	jmp	0x804849e
0x8048499:	call	8048465
0x804849e:	mov	$0x0, %eax
0x80484a3:	leave	
0x80484a4:	ret	
0x80484a5:	nop	
0x80484a6:	nop	
0x80484a7:	nop	
0x80484a8:	nop	
0x80484a9:	nop	
0x80484aa:	nop	
0x80484ab:	nop	
0x80484ac:	nop	
0x80484ad:	nop	
0x80484ae:	nop	
0x80484af:	nop	
Function __libc_csu_init: 0x80484b0 - 0x8048510
calls:80482e0,8048560,
0x80484b0:	push	%ebp
0x80484b1:	mov	%esp, %ebp
0x80484b3:	push	%edi
0x80484b4:	push	%esi
0x80484b5:	xor	%esi, %esi
0x80484b7:	push	%ebx
0x80484b8:	sub	$0xc, %esp
0x80484bb:	call	8048560
0x80484c0:	add	$0x1260, %ebx
0x80484c6:	call	80482e0
0x80484cb:	lea	-0x154(%ebx), %edx
0x80484d1:	lea	-0x154(%ebx), %eax
0x80484d7:	sub	%eax, %edx
0x80484d9:	sar	$0x2, %edx
0x80484dc:	cmp	%edx, %esi
0x80484de:	jnc	0x80484fc
0x80484e0:	mov	%edx, %edi
0x80484e2:	lea	0x0(%esi), %esi
0x80484e9:	lea	0x0(%edi), %edi
0x80484f0:	calll	-0x154(%ebx,%esi,4)
0x80484f7:	inc	%esi
0x80484f8:	cmp	%edi, %esi
0x80484fa:	jc	0x80484f0
0x80484fc:	add	$0xc, %esp
0x80484ff:	pop	%ebx
0x8048500:	pop	%esi
0x8048501:	pop	%edi
0x8048502:	pop	%ebp
0x8048503:	ret	
0x8048504:	lea	0x0(%esi), %esi
0x804850a:	lea	0x0(%edi), %edi
Function __libc_csu_fini: 0x8048510 - 0x8048560
calls:8048560,80485a0,
0x8048510:	push	%ebp
0x8048511:	mov	%esp, %ebp
0x8048513:	sub	$0x8, %esp
0x8048516:	movl	%ebx, (%esp)
0x8048519:	call	8048560
0x804851e:	add	$0x1202, %ebx
0x8048524:	movl	%esi, 0x4(%esp)
0x8048528:	lea	-0x154(%ebx), %eax
0x804852e:	lea	-0x154(%ebx), %edx
0x8048534:	sub	%edx, %eax
0x8048536:	sar	$0x2, %eax
0x8048539:	test	%eax, %eax
0x804853b:	lea	0xff(%eax), %esi
0x804853e:	jnz	0x8048550
0x8048540:	call	80485a0
0x8048545:	mov	(%esp), %ebx
0x8048548:	mov	0x4(%esp), %esi
0x804854c:	mov	%ebp, %esp
0x804854e:	pop	%ebp
0x804854f:	ret	
0x8048550:	calll	-0x154(%ebx,%esi,4)
0x8048557:	mov	%esi, %eax
0x8048559:	dec	%esi
0x804855a:	test	%eax, %eax
0x804855c:	jnz	0x8048550
0x804855e:	jmp	0x8048540
Function 8048560: 0x8048560 - 0x80485a0
calls:
0x8048560:	mov	(%esp), %ebx
0x8048563:	ret	
0x8048564:	nop	
0x8048565:	nop	
0x8048566:	nop	
0x8048567:	nop	
0x8048568:	nop	
0x8048569:	nop	
0x804856a:	nop	
0x804856b:	nop	
0x804856c:	nop	
0x804856d:	nop	
0x804856e:	nop	
0x804856f:	nop	
0x8048570:	push	%ebp
0x8048571:	mov	%esp, %ebp
0x8048573:	push	%ebx
0x8048574:	sub	$0x4, %esp
0x8048577:	mov	$0x804970c, %ebx
0x804857c:	mov	0x804970c, %eax
0x8048581:	cmp	$0xffffffff, %eax
0x8048584:	jz	0x804859c
0x8048586:	lea	0x0(%esi), %esi
0x8048589:	lea	0x0(%edi), %edi
0x8048590:	sub	$0x4, %ebx
0x8048593:	call	%eax
0x8048595:	mov	(%ebx), %eax
0x8048597:	cmp	$0xffffffff, %eax
0x804859a:	jnz	0x8048590
0x804859c:	pop	%eax
0x804859d:	pop	%ebx
0x804859e:	pop	%ebp
0x804859f:	ret	

Section '.fini' 0x80485a0 - 0x80485bb 
Function 80485a0: 0x80485a0 - 0x80485a0
calls:
0x80485a0:	push	%ebp
0x80485a1:	mov	%esp, %ebp
0x80485a3:	push	%ebx
0x80485a4:	call	0x80485a9
0x80485a9:	pop	%ebx
0x80485aa:	add	$0x1177, %ebx
0x80485b0:	push	%edx
0x80485b1:	call	0x80483a0
0x80485b6:	mov	0xfc(%ebp), %ebx
0x80485b9:	leave	
0x80485ba:	ret	
